name: Build, Test, and Deploy

on:
  push:
    branches: [ "main" ]
    paths:
      - '**'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**'
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.11.0
          auto-update-conda: true
      - shell: bash -l {0}
        run: |
          conda info
          conda list       
      - name: Lint
        shell: bash -l {0}
        env:  
          HUGGING_FACE_TOKEN: ${{ secrets.HUGGING_FACE_TOKEN }}
        run: |
            conda install flake8
            python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
       
            # Docker setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Build Docker image
      - name: Build Docker image
        run: docker build -t llm .

      # Run Docker container
      - name: Run Docker container
        run: docker run -d --name llm-container llm

      # Wait for the Docker container to start (optional)
      - name: Wait for container to start
        run: sleep 10

      # Install dependencies and run tests inside the Docker container
      # - name: Run tests
      #   run: |
      #     docker exec llm-container /bin/sh -c "pip install --upgrade pip && pip install -r requirements.txt && pip install pytest && pytest"
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/llm-pr-chatbot:latest
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/llm-pr-chatbot:${{ github.sha }}

  deploy-extension:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Zip Chrome Extension
        run: |
          cd LLM-bot-extension/src
          zip -r extension.zip .
      - name: Deploy to Chrome Web Store
        uses: trmcnvn/chrome-webstore-upload-action@v1
        with:
          extension-id: ${{ secrets.EXTENSION_ID }}
          client-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          refresh-token: ${{ secrets.REFRESH_TOKEN }}
          zip-file: extension.zip
